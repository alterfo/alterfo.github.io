(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{374:function(e,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Critical Rendering Path это последовательность шагов по превращению браузером HTML, CSS и JavaScript в пиксели на экране.")]),e._v(" "),t("p",[e._v("Итак, браузер получает на обработку HTML-файл. Парсер проходит его байт за байтом и вычленяет токены (самые главные - startTag, endTag), потом из набора токенов строятся ноды, а из иерархии нод получается Document Object Model (DOM) на основе информации о последовательности токенов. В DOM содержится весь контент страницы.")]),e._v(" "),t("p",[e._v("Когда парсер находит токены запросов внешних ресурсов (стилей, картинок, скриптов), он их запрашивает, но от 4 до 7 за раз в зависимости от браузера. Некоторые запросы блокируют парсинг, некоторые могут идти в параллели.")]),e._v(" "),t("p",[e._v("Когда парсер видит токен стилей, он начинает строить CSS Object Model (CSSOM). Оно строится очень быстро, поэтому оптимизация CSS-селекторов не даёт большого прироста к производительности, а минификация и отложенный запрос второстепенных стилей - даёт. Когда DOM и CSSOM готовы, начинается создание Render Tree.")]),e._v(" "),t("p",[e._v("Render Tree содержит в себе весь контент и его стилизацию. Кроме явно скрытых (display:none) элементов.")]),e._v(" "),t("p",[e._v("Эти три фазы, как правило,происходят один раз, но возможны ситуации когда свежезагруженный скрипт основательно меняет DOM (размеры элементов, отступы), тогда этот процесс происходит заново.")]),e._v(" "),t("p",[e._v("На основе Render Tree строится Layout - расположение элементов друг относительно друга и размеры блоков на основе их содержимого. Нужно помнить, что изменение размеров окна браузера, поворот смартфона, а и иногда и обычный запрос из скрипта расстояния между элементами может привести к пересчёту всего Layout. Чем больше DOM, тем больше занимает время пересчёт Layout (reflow). В это время страница не может реагировать на действия пользователя. Желательно что бы reflow занимал максимум 10 миллисекунд чтобы добиться 60 кадров в секунду.")]),e._v(" "),t("p",[e._v('Следующий шаг - Paint. Обычно он не доставляет хлопот в оптимизации, он просто растеризует (превращает в пиксели с помощью GPU) то, что насчиталось в Layout. Paint происходит в несколько слоёв в зависимости от позиционирования элементов. Проблемы с ним бывают при работе со сложной анимацией в canvas, они решаются отрисовкой в памяти, "за экраном" с помощью OffScreenCanvas или WebWorker-ов.')]),e._v(" "),t("p",[e._v("Поскольку отрисовка многослойная, мы получаем возможность двигать элементы не вызывая Paint снова. Пока только два стиля - opacity и transition - работают на этом этапе. Указать парсеру что элемент будет двигаться можно заранее с помощью")]),e._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[e._v("will-change")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" transform"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("но не нужно делать этого повсеместно чтобы не нагружать GPU.")]),e._v(" "),t("p",[e._v("Поскольку браузер - основная платформа веб-разработчиков, непонимание вышеописанного процесса ведёт к созданию неотзывчивых сайтов.")]),e._v(" "),t("p",[e._v("Секунды задержки в интернет-магазинах приводят к миллионам недополученной прибыли. А из-за отсутствия при старте проекта требований к производительности, веб-приложение для гос-служащих с 15Мб скриптов на Камчатке грузится 38 минут.")]),e._v(" "),t("p",[e._v("Источники:")]),e._v(" "),t("p",[e._v("Личный опыт")]),e._v(" "),t("p",[e._v("https://developers.google.com/web/fundamentals/performance/rendering")]),e._v(" "),t("p",[e._v("https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path")])])}),[],!1,null,null,null);t.default=r.exports}}]);